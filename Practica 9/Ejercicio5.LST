CCS PCM C Compiler, Version 3.184, 22094

               Filename: D:\Microcomputadoras\Practica 9\ejerccio4.LST

               ROM used: 325 (4%)
                         Largest free fragment is 2048
               RAM used: 17 (10%) at main() level
                         18 (10%) worst case
               Stack:    2 worst case (0 in main + 2 for interrupts)

*
0000:  MOVLW  00
0001:  MOVWF  0A
0002:  GOTO   11B
0003:  NOP
0004:  MOVWF  7F
0005:  SWAPF  03,W
0006:  CLRF   03
0007:  MOVWF  21
0008:  MOVF   0A,W
0009:  MOVWF  20
000A:  CLRF   0A
000B:  MOVF   04,W
000C:  MOVWF  22
000D:  MOVF   77,W
000E:  MOVWF  23
000F:  MOVF   78,W
0010:  MOVWF  24
0011:  MOVF   79,W
0012:  MOVWF  25
0013:  MOVF   7A,W
0014:  MOVWF  26
0015:  MOVF   7B,W
0016:  MOVWF  27
0017:  BCF    03.7
0018:  BCF    03.5
0019:  BTFSS  0B.5
001A:  GOTO   01D
001B:  BTFSC  0B.2
001C:  GOTO   034
001D:  BTFSS  0B.3
001E:  GOTO   021
001F:  BTFSC  0B.0
0020:  GOTO   037
0021:  MOVF   22,W
0022:  MOVWF  04
0023:  MOVF   23,W
0024:  MOVWF  77
0025:  MOVF   24,W
0026:  MOVWF  78
0027:  MOVF   25,W
0028:  MOVWF  79
0029:  MOVF   26,W
002A:  MOVWF  7A
002B:  MOVF   27,W
002C:  MOVWF  7B
002D:  MOVF   20,W
002E:  MOVWF  0A
002F:  SWAPF  21,W
0030:  MOVWF  03
0031:  SWAPF  7F,F
0032:  SWAPF  7F,W
0033:  RETFIE
0034:  BCF    0A.3
0035:  BCF    0A.4
0036:  GOTO   10A
0037:  BCF    0A.3
0038:  BCF    0A.4
0039:  GOTO   0AC
....................  #include <16f877.h> 
....................  //////// Standard Header file for the PIC16F877 device ////////////////  
.................... #device PIC16F877  
.................... #list  
....................  
.................... #fuses HS,NOPROTECT,  
.................... #use delay(clock=20000000)  
.................... //Configuración Puerto SERIAL  
.................... #use rs232(baud=9600, xmit=PIN_C6, rcv=PIN_C7)  
.................... #org 0x1F00, 0x1FFF  
....................   
.................... void loader16F877(void) {}  
*
1F00:  RETLW  00
....................   
.................... int var;  
.................... int var2;  
.................... int16 contador = 0;  
*
0128:  CLRF   2A
0129:  CLRF   2B
....................   
.................... #int_rb  
....................   
.................... port_rb(){  
....................   
....................     var2 = input_b();  
*
00AC:  MOVLW  FF
00AD:  BSF    03.5
00AE:  MOVWF  06
00AF:  BCF    03.5
00B0:  MOVF   06,W
00B1:  MOVWF  29
....................   
....................     if(var2==0x80)  
....................     printf("Interrupcion PB7\n\r");  
00B2:  MOVF   29,W
00B3:  SUBLW  80
00B4:  BTFSS  03.2
00B5:  GOTO   0C3
00B6:  CLRF   2C
00B7:  MOVF   2C,W
00B8:  CALL   03A
00B9:  INCF   2C,F
00BA:  MOVWF  77
00BB:  MOVF   77,W
00BC:  BTFSS  0C.4
00BD:  GOTO   0BC
00BE:  MOVWF  19
00BF:  MOVLW  12
00C0:  SUBWF  2C,W
00C1:  BTFSS  03.2
00C2:  GOTO   0B7
....................     if(var2==0x40)  
....................     printf("Interrupcion PB6\n\r");  
00C3:  MOVF   29,W
00C4:  SUBLW  40
00C5:  BTFSS  03.2
00C6:  GOTO   0D4
00C7:  CLRF   2C
00C8:  MOVF   2C,W
00C9:  CALL   051
00CA:  INCF   2C,F
00CB:  MOVWF  77
00CC:  MOVF   77,W
00CD:  BTFSS  0C.4
00CE:  GOTO   0CD
00CF:  MOVWF  19
00D0:  MOVLW  12
00D1:  SUBWF  2C,W
00D2:  BTFSS  03.2
00D3:  GOTO   0C8
....................     if(var2==0x20)  
....................     printf("Interrupcion PB5\n\r");  
00D4:  MOVF   29,W
00D5:  SUBLW  20
00D6:  BTFSS  03.2
00D7:  GOTO   0E5
00D8:  CLRF   2C
00D9:  MOVF   2C,W
00DA:  CALL   068
00DB:  INCF   2C,F
00DC:  MOVWF  77
00DD:  MOVF   77,W
00DE:  BTFSS  0C.4
00DF:  GOTO   0DE
00E0:  MOVWF  19
00E1:  MOVLW  12
00E2:  SUBWF  2C,W
00E3:  BTFSS  03.2
00E4:  GOTO   0D9
....................     if(var2==0x10)  
....................     printf("Interrupcion PB4\n\r");  
00E5:  MOVF   29,W
00E6:  SUBLW  10
00E7:  BTFSS  03.2
00E8:  GOTO   0F6
00E9:  CLRF   2C
00EA:  MOVF   2C,W
00EB:  CALL   07F
00EC:  INCF   2C,F
00ED:  MOVWF  77
00EE:  MOVF   77,W
00EF:  BTFSS  0C.4
00F0:  GOTO   0EF
00F1:  MOVWF  19
00F2:  MOVLW  12
00F3:  SUBWF  2C,W
00F4:  BTFSS  03.2
00F5:  GOTO   0EA
....................     if(var2==0x00)  
....................     printf("Pulso de bajada\n\r");  
00F6:  MOVF   29,F
00F7:  BTFSS  03.2
00F8:  GOTO   106
00F9:  CLRF   2C
00FA:  MOVF   2C,W
00FB:  CALL   096
00FC:  INCF   2C,F
00FD:  MOVWF  77
00FE:  MOVF   77,W
00FF:  BTFSS  0C.4
0100:  GOTO   0FF
0101:  MOVWF  19
0102:  MOVLW  11
0103:  SUBWF  2C,W
0104:  BTFSS  03.2
0105:  GOTO   0FA
....................  }  
....................   
0106:  BCF    0B.0
0107:  BCF    0A.3
0108:  BCF    0A.4
0109:  GOTO   021
.................... #int_rtcc                                             // Timer0  
....................   
.................... clock_isr(){                                          // Rutina de atención a la interrupción por Timer0  
....................      contador++;  
010A:  INCF   2A,F
010B:  BTFSC  03.2
010C:  INCF   2B,F
....................      if(contador==770){  
010D:  MOVF   2A,W
010E:  SUBLW  02
010F:  BTFSS  03.2
0110:  GOTO   117
0111:  MOVF   2B,W
0112:  SUBLW  03
0113:  BTFSS  03.2
0114:  GOTO   117
....................      contador=0;  
0115:  CLRF   2B
0116:  CLRF   2A
....................    }  
.................... }  
....................   
0117:  BCF    0B.2
0118:  BCF    0A.3
0119:  BCF    0A.4
011A:  GOTO   021
.................... void main(){  
....................   
011B:  CLRF   04
011C:  MOVLW  1F
011D:  ANDWF  03,F
011E:  MOVLW  06
011F:  BSF    03.5
0120:  MOVWF  1F
0121:  MOVLW  81
0122:  MOVWF  19
0123:  MOVLW  26
0124:  MOVWF  18
0125:  MOVLW  90
0126:  BCF    03.5
0127:  MOVWF  18
....................     Enable_interrupts(INT_RB);                        // Habilita interrupción por cambio  
*
012A:  BSF    0B.3
....................                                                       // de nivel en los cuatro bits más significativos del puerto B  
....................   
....................     set_timer0(0);                                    // Inicia el timer0 en 00H  
012B:  CLRF   01
....................     setup_counters(RTCC_INTERNAL,RTCC_DIV_256);       // Fuente de reloj y pre-divisor  
012C:  MOVLW  07
012D:  MOVWF  77
012E:  BTFSS  77.3
012F:  GOTO   138
0130:  MOVLW  07
0131:  CLRF   01
0132:  MOVLW  81
0133:  MOVWF  04
0134:  MOVF   00,W
0135:  ANDLW  C0
0136:  IORLW  0F
0137:  MOVWF  00
0138:  CLRWDT
0139:  MOVLW  81
013A:  MOVWF  04
013B:  MOVF   00,W
013C:  ANDLW  C0
013D:  IORWF  77,W
013E:  MOVWF  00
....................     enable_interrupts(INT_RTCC);                      // Habilita interrupción TIMER0  
013F:  BSF    0B.5
....................     enable_interrupts(GLOBAL);                        // Habilita demás interrupciones  
0140:  MOVLW  C0
0141:  IORWF  0B,F
....................   
....................     while(1){  
....................       
....................     }  
0142:  GOTO   142
.................... }  
....................  
0143:  SLEEP

Configuration Fuses:
   Word  1: 3FFE   HS WDT NOPUT NOPROTECT BROWNOUT LVP NOCPD NOWRT NODEBUG
